output$moreControls_c3 = NULL
}
})
}
shinyApp(ui, server)
source("scripts/Chaco-time-average.R")
source("scripts/network-analysis-functions.R")
theme_set(theme_minimal())
library(ggthemes)
library(lme4)
library(dplyr)
library(factoextra)
library(ggplot2)
library(tidyverse)
c800 = Chaco_ta_compare(graphs[[1]], 1, graphs, "chaco800")
c825 = Chaco_ta_compare(graphs[[2]], 2, graphs, "chaco825")
c850 = Chaco_ta_compare(graphs[[3]], 3, graphs, "chaco850")
c875 = Chaco_ta_compare(graphs[[4]], 4, graphs, "chaco875")
c900 = Chaco_ta_compare(graphs[[5]], 5, graphs, "chaco900")
c925 = Chaco_ta_compare(graphs[[6]], 6, graphs, "chaco925")
c950 = Chaco_ta_compare(graphs[[7]], 7, graphs, "chaco950")
c975 = Chaco_ta_compare(graphs[[8]], 8, graphs, "chaco975")
c1000 = Chaco_ta_compare(graphs[[9]], 9, graphs, "chaco1000")
c1025 = Chaco_ta_compare(graphs[[10]], 10, graphs, "chaco1025")
c1050 = Chaco_ta_compare(graphs[[11]], 11, graphs, "chaco1050")
c1075 = Chaco_ta_compare(graphs[[12]], 12, graphs, "chaco1075")
c1100 = Chaco_ta_compare(graphs[[13]], 13, graphs, "chaco1100")
c1125 = Chaco_ta_compare(graphs[[14]], 14, graphs, "chaco1125")
c1150 = Chaco_ta_compare(graphs[[15]], 15, graphs, "chaco1150")
c1175 = Chaco_ta_compare(graphs[[16]], 16, graphs, "chaco1175")
c1200 = Chaco_ta_compare(graphs[[17]], 17, graphs, "chaco1200")
c1225 = Chaco_ta_compare(graphs[[18]], 18, graphs, "chaco1225")
c1250 = Chaco_ta_compare(graphs[[19]], 19, graphs, "chaco1250")
c1275 = Chaco_ta_compare(graphs[[20]], 20, graphs, "chaco1275")
alldata = rbind(c800, c825, c850, c875,
c900, c925, c950, c975,
c1000, c1025, c1050, c1075,
c1100, c1125, c1150, c1175,
c1200, c1225, c1250, c1275)
datalist = list(c800, c825, c850, c875,
c900, c925, c950, c975,
c1000, c1025, c1050, c1075,
c1100, c1125, c1150, c1175,
c1200, c1225, c1250, c1275)
####Original graphs analysis####
name.list = c(
"chaco800", "chaco825", "chaco850", "chaco875",
"chaco900", "chaco925", "chaco950", "chaco975",
"chaco1000", "chaco1025", "chaco1050", "chaco1075",
"chaco1100", "chaco1125", "chaco1150", "chaco1175",
"chaco1200", "chaco1225", "chaco1250", "chaco1275"
)
metric.list = c("size", "diam", "mean.deg", "mean.in", "mean.out", "edge.dens", "path.length", "cc", "mod", "btwn", "eigen")
od = alldata %>% filter(num.graphs == 1) %>% gather(key = "metric", value = "value", c(1:11))
od$network = factor(od$network, levels = name.list)
od$metric = factor(od$metric, levels = metric.list)
oplot = ggplot(od, aes(y = value, x = network, color = network)) +
geom_point() +
facet_wrap(~metric, scales = "free_y") +
theme_minimal() +
theme(axis.text.x = element_blank())
ggsave("figures/metrics/Chaco/original-network-metrics.pdf", oplot, width = 8, height = 5)
####PCA Analysis####
ggsave("figures/pca/Chaco/pca-biplot.pdf", pca_biplot(alldata, c("btwn", "eigen", "mean.deg", "cc", "mod", "path.length")))
####Model Errors####
##comparison to original graph
modelerrors = calculate_model_error(graphs[[1]], c800)
for(g in 2:(length(graphs)-1)) {
modelerrors = rbind(modelerrors, calculate_model_error(graphs[[g]], datalist[[g]]))
}
#plot(plot_model_errors(modelerrors))
ggsave("figures/null-models/Chaco/me_ta-to-orig.pdf", plot_model_errors(modelerrors, c("btwn_me", "eigen_me", "cc_me", "mod_me", "diam_me")), height = 4, width = 7)
for(index in 1:length(graphs)) {
modelerrors2 = calculate_model_error(graphs[[1]], c800)
if(index == 1) {
for(i in 2:(length(graphs)-index)) {
modelerrors2 = rbind(modelerrors2, calculate_model_error(time_average(graphs, index, index+i), datalist[[index]]))
}
} else if(index == length(graphs)) {
for(i in 1:(length(graphs)-1)) {
modelerrors2 = rbind(modelerrors2, calculate_model_error(time_average(graphs, i, index), datalist[[index]]))
}
df$num.graphs = c(1, seq(nrow(df), 2 , by = -1))
df$network = c(replicate(nrow(df), o_name))
} else { #TODO multiple direction time-averaging
for(i in 1:(length(graphs)-index)) {
modelerrors2 = rbind(modelerrors2, calculate_model_error(time_average(graphs, index, index+i), datalist[[index]]))
}
for(i in 1:(index-1)) {
modelerrors2 = rbind(modelerrors2, calculate_model_error(time_average(graphs, i, index), datalist[[index]]))
}
}
}
ggsave("figures/null-models/Chaco/all_ta_me.pdf", plot_model_errors(modelerrors2, c("btwn_me", "eigen_me", "cc_me", "mod_me", "diam_me")), height = 4, width = 7)
source("scripts/Chaco-time-average.R")
theme_set(theme_minimal())
install.packages("adventr", dependencies = TRUE)
library(adventr)
library(adventr)
library(help = "datasets")
library(shiny)
library(shinythemes)
library(readxl)
diagnostics_list = as.data.frame(read_excel("C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/_Material studies framework.xlsx", skip = 1))
diagnostics_list = diagnostics_list[!is.na(diagnostics_list$`Drawing number`),]
diagnostics_list = diagnostics_list[!(diagnostics_list$`Drawing number` %in% c("DR-CS-6",  "DR-CS-32", "?", "DR-CS-3", "DR-CS-22", "DR-CS-21")),]
df_list = diagnostics_list[, c("type","Drawing number")]
pic_list = NULL
wd.list.i = "C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/Drawings/All Drawings"
for (i in 1:length(wd.list.i)) {
wd.i = wd.list.i[i]
files.i = unlist(list.files(wd.i))
list.i = cbind.data.frame(wd.i, files.i)
pic_list = rbind.data.frame(pic_list, list.i)
}
pic_list$files.i = as.character(pic_list$files.i)
pic_list$filename = substr(pic_list$files.i, 1, nchar(pic_list$files.i)-4)
pic_list$filetype = substr(pic_list$files.i, nchar(pic_list$files.i)-3, nchar(pic_list$files.i))
df_list$filename = ""
for (i in 1:dim(df_list)[1]) {
df_list$filename[i] = strsplit(df_list$`Drawing number`[i], split = ";")[[1]][1]
}
df_shiny = merge(df_list, pic_list, by = "filename")
df_shiny = df_shiny[order(df_shiny$type),]
df_shiny = df_shiny[,c("wd.i", "files.i", "type")]
df_shiny = na.omit(df_shiny)
# unique(df_shiny$type)
tbl = as.data.frame(table(df_shiny$type))
colnames(tbl) = c("type","obs")
listtypes = as.list(unique(df_shiny$type))
ui = tags$div(fluidPage(theme = shinytheme("journal"),
tabsetPanel(
tabPanel("Images",
fluidRow(
column(width = 12, align = "center",
selectInput("selectortype", h5("Select Type Variant"), choices = listtypes, multiple = FALSE)),
column(width = 4,
uiOutput('moreControls_c1')
),
column(width = 4,
uiOutput('moreControls_c2')
),
column(width = 4,
uiOutput('moreControls_c3')
)
)
),
tabPanel("Table",
column(width = 6,
tableOutput('tableTV'))
)
)))
server <- function(input, output, session) {
output$tableTV = renderTable(tbl)
filelist_selected = reactive({
df_shiny[which(df_shiny$type %in% as.character(input$selectortype)),]
})
grid_selected = reactive({
intdiv = dim(filelist_selected())[1]%/%3
modul = dim(filelist_selected())[1]%%3
sdlength_3 = intdiv
sdlength_2 = intdiv
sdlength_1 = intdiv
if (modul == 2) {
sdlength_2 = intdiv + 1
sdlength_1 = intdiv + 1
} else if (modul == 1) {
sdlength_2 = intdiv
sdlength_1 = intdiv + 1
}
returns = list(sdlength_1, sdlength_2, sdlength_3)
return(returns)
})
output$moreControls_c1 = renderUI({
lapply(1:grid_selected()[[1]], function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
observeEvent(grid_selected(), {
if (grid_selected()[[2]]>0) {
output$moreControls_c2 = renderUI({
lapply((grid_selected()[[1]]+1):(grid_selected()[[1]]+grid_selected()[[2]]), function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
} else {
output$moreControls_c2 = NULL
}
})
observeEvent(grid_selected(), {
if (grid_selected()[[3]]>0) {
output$moreControls_c3 = renderUI({
lapply((grid_selected()[[1]]+grid_selected()[[2]]+1):(grid_selected()[[1]]+grid_selected()[[2]]+grid_selected()[[3]]), function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
} else {
output$moreControls_c3 = NULL
}
})
}
shinyApp(ui, server)
# environment
rm(list=ls())
library(shiny); runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
library(shiny); runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
rm(list = ls())
runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
rm(list = ls())
runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
diagnostics_list = as.data.frame(read_excel("C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/_Material studies framework.xlsx", skip = 1))
diagnostics_list = as.data.frame(read_excel("C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/_Material studies framework.xlsx", skip = 1))
diagnostics_list = diagnostics_list[!is.na(diagnostics_list$`Drawing number`),]
diagnostics_list = diagnostics_list[!(diagnostics_list$`Drawing number` %in% c("DR-CS-6",  "DR-CS-32", "?", "DR-CS-3", "DR-CS-22", "DR-CS-21")),]
df_list = diagnostics_list[, c("type","Drawing number")]
pic_list = NULL
wd.list.i = "C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/Drawings/All Drawings"
for (i in 1:length(wd.list.i)) {
wd.i = wd.list.i[i]
files.i = unlist(list.files(wd.i))
list.i = cbind.data.frame(wd.i, files.i)
pic_list = rbind.data.frame(pic_list, list.i)
}
pic_list$files.i = as.character(pic_list$files.i)
pic_list$filename = substr(pic_list$files.i, 1, nchar(pic_list$files.i)-4)
pic_list$filetype = substr(pic_list$files.i, nchar(pic_list$files.i)-3, nchar(pic_list$files.i))
df_list$filename = ""
for (i in 1:dim(df_list)[1]) {
df_list$filename[i] = strsplit(df_list$`Drawing number`[i], split = ";")[[1]][1]
}
df_shiny = merge(df_list, pic_list, by = "filename")
df_shiny = df_shiny[order(df_shiny$type),]
df_shiny = df_shiny[,c("wd.i", "files.i", "type")]
df_shiny = na.omit(df_shiny)
# unique(df_shiny$type)
tbl = as.data.frame(table(df_shiny$type))
colnames(tbl) = c("type","obs")
listtypes = as.list(unique(df_shiny$type))
ui = tags$div(fluidPage(theme = shinytheme("journal"),
tabsetPanel(
tabPanel("Images",
fluidRow(
column(width = 12, align = "center",
selectInput("selectortype", h5("Select Type Variant"), choices = listtypes, multiple = FALSE)),
column(width = 4,
uiOutput('moreControls_c1')
),
column(width = 4,
uiOutput('moreControls_c2')
),
column(width = 4,
uiOutput('moreControls_c3')
)
)
),
tabPanel("Table",
column(width = 6,
tableOutput('tableTV'))
)
)))
server <- function(input, output, session) {
output$tableTV = renderTable(tbl)
filelist_selected = reactive({
df_shiny[which(df_shiny$type %in% as.character(input$selectortype)),]
})
grid_selected = reactive({
intdiv = dim(filelist_selected())[1]%/%3
modul = dim(filelist_selected())[1]%%3
sdlength_3 = intdiv
sdlength_2 = intdiv
sdlength_1 = intdiv
if (modul == 2) {
sdlength_2 = intdiv + 1
sdlength_1 = intdiv + 1
} else if (modul == 1) {
sdlength_2 = intdiv
sdlength_1 = intdiv + 1
}
returns = list(sdlength_1, sdlength_2, sdlength_3)
return(returns)
})
output$moreControls_c1 = renderUI({
lapply(1:grid_selected()[[1]], function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
observeEvent(grid_selected(), {
if (grid_selected()[[2]]>0) {
output$moreControls_c2 = renderUI({
lapply((grid_selected()[[1]]+1):(grid_selected()[[1]]+grid_selected()[[2]]), function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
} else {
output$moreControls_c2 = NULL
}
})
observeEvent(grid_selected(), {
if (grid_selected()[[3]]>0) {
output$moreControls_c3 = renderUI({
lapply((grid_selected()[[1]]+grid_selected()[[2]]+1):(grid_selected()[[1]]+grid_selected()[[2]]+grid_selected()[[3]]), function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
} else {
output$moreControls_c3 = NULL
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
library(readxl)
diagnostics_list = as.data.frame(read_excel("C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/_Material studies framework.xlsx", skip = 1))
diagnostics_list = diagnostics_list[!is.na(diagnostics_list$`Drawing number`),]
diagnostics_list = diagnostics_list[!(diagnostics_list$`Drawing number` %in% c("DR-CS-6",  "DR-CS-32", "?", "DR-CS-3", "DR-CS-22", "DR-CS-21")),]
df_list = diagnostics_list[, c("type","Drawing number")]
df_list = diagnostics_list[, c("type","drawing_number")]
pic_list = NULL
wd.list.i = "C:/Users/daems/OneDrive/Work/Research/Material studies/Sagalassos/Drawings/All Drawings"
for (i in 1:length(wd.list.i)) {
wd.i = wd.list.i[i]
files.i = unlist(list.files(wd.i))
list.i = cbind.data.frame(wd.i, files.i)
pic_list = rbind.data.frame(pic_list, list.i)
}
pic_list$files.i = as.character(pic_list$files.i)
pic_list$filename = substr(pic_list$files.i, 1, nchar(pic_list$files.i)-4)
pic_list$filetype = substr(pic_list$files.i, nchar(pic_list$files.i)-3, nchar(pic_list$files.i))
df_list$filename = ""
for (i in 1:dim(df_list)[1]) {
df_list$filename[i] = strsplit(df_list$`Drawing number`[i], split = ";")[[1]][1]
}
df_shiny = merge(df_list, pic_list, by = "filename")
df_shiny = df_shiny[order(df_shiny$type),]
df_shiny = df_shiny[,c("wd.i", "files.i", "type")]
df_shiny = na.omit(df_shiny)
# unique(df_shiny$type)
tbl = as.data.frame(table(df_shiny$type))
colnames(tbl) = c("type","obs")
listtypes = as.list(unique(df_shiny$type))
ui = tags$div(fluidPage(theme = shinytheme("journal"),
tabsetPanel(
tabPanel("Images",
fluidRow(
column(width = 12, align = "center",
selectInput("selectortype", h5("Select Type Variant"), choices = listtypes, multiple = FALSE)),
column(width = 4,
uiOutput('moreControls_c1')
),
column(width = 4,
uiOutput('moreControls_c2')
),
column(width = 4,
uiOutput('moreControls_c3')
)
)
),
tabPanel("Table",
column(width = 6,
tableOutput('tableTV'))
)
)))
server <- function(input, output, session) {
output$tableTV = renderTable(tbl)
filelist_selected = reactive({
df_shiny[which(df_shiny$type %in% as.character(input$selectortype)),]
})
grid_selected = reactive({
intdiv = dim(filelist_selected())[1]%/%3
modul = dim(filelist_selected())[1]%%3
sdlength_3 = intdiv
sdlength_2 = intdiv
sdlength_1 = intdiv
if (modul == 2) {
sdlength_2 = intdiv + 1
sdlength_1 = intdiv + 1
} else if (modul == 1) {
sdlength_2 = intdiv
sdlength_1 = intdiv + 1
}
returns = list(sdlength_1, sdlength_2, sdlength_3)
return(returns)
})
output$moreControls_c1 = renderUI({
lapply(1:grid_selected()[[1]], function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
observeEvent(grid_selected(), {
if (grid_selected()[[2]]>0) {
output$moreControls_c2 = renderUI({
lapply((grid_selected()[[1]]+1):(grid_selected()[[1]]+grid_selected()[[2]]), function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
} else {
output$moreControls_c2 = NULL
}
})
observeEvent(grid_selected(), {
if (grid_selected()[[3]]>0) {
output$moreControls_c3 = renderUI({
lapply((grid_selected()[[1]]+grid_selected()[[2]]+1):(grid_selected()[[1]]+grid_selected()[[2]]+grid_selected()[[3]]), function(i) {
renderImage({
return(list(
src = paste0(filelist_selected()$wd.i[i], "/", filelist_selected()$files.i[i]),
width = 500,
alt = as.character(filelist_selected()$files.i[i])
))
}, deleteFile = FALSE)
}
)
})
} else {
output$moreControls_c3 = NULL
}
})
}
shinyApp(ui, server)
rm(list = ls())
runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
rm(list = ls())
runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
rm(list = ls())
runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
rm(list = ls())
library(shiny); runApp('C:/Users/daems/OneDrive/Work/Code/pottery/shinyApp_pottery-images-per-type.R')
setwd('C:/Users/daems/OneDrive/Work/Code/GitHub/Resoc')
data <- read.csv('ResEx regeneration-time-spreadsheet')
data <- read.csv('ResEx regeneration-time-spreadsheet.csv')
?read.csv
read.csv
data <- read.csv('ResEx regeneration-time-spreadsheet.csv', header = FALSE)
View(data)
data <- read.csv('ResEx regeneration-time-table.csv', header = FALSE)
View(data)
data <- read.csv('ResEx regeneration-time-table.csv', header = TRUE)
data <- read.csv('ResEx regeneration-time-table.csv', header = FALSE)
rm(list=ls())
setwd('C:/Users/daems/OneDrive/Work/Code/GitHub/Resoc')
data <- read.csv('ResEx regeneration-time-table.csv', header = FALSE)
View(data)
data <- read.table('ResEx regeneration-time-table.csv', header = FALSE)
data <- read.table('ResEx regeneration-time-table.csv', header = FALSE, sep = ",")
data <- read.table('ResEx regeneration-time-table.csv', header = FALSE, sep = "")
data <- read.table('ResEx regeneration-time-table.csv', header = FALSE, sep = " ")
View(data)
data <- read.table('ResEx regeneration-time-table.csv', header = FALSE, sep = "\t")
data <- read.table('ResEx regeneration-time-table.csv', header = FALSE, sep = "")
data <- read.table(file = 'ResEx regeneration-time-table.csv', header = FALSE)
data <- read.table(file = 'ResEx regeneration-time-table.csv', header = FALSE, sep = ",")
library(readxl)
ResEx_regeneration_time_table <- read_excel("ResEx regeneration-time-table.xlsx",
col_names = FALSE, skip = 7)
View(ResEx_regeneration_time_table)
